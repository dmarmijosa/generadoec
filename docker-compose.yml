version: '3.8'

services:
  generadorec:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - CORS_ORIGINS=http://localhost:3000,https://generadorec.dmarmijosa.com
      - APP_NAME=GeneradorEC
      - APP_VERSION=1.0.0
      - API_TITLE=GeneradorEC API
      - API_DESCRIPTION=API para generar datos ecuatorianos vÃ¡lidos para desarrollo y testing
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.generadorec.rule=Host(`generadorec.dmarmijosa.com`)"
      - "traefik.http.routers.generadorec.tls=true"
      - "traefik.http.routers.generadorec.tls.certresolver=letsencrypt"
      - "traefik.http.services.generadorec.loadbalancer.server.port=3000"

  # Servicio opcional para desarrollo
  generadorec-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - CORS_ORIGINS=http://localhost:5173,http://localhost:3000
      - API_TITLE=GeneradorEC API (Development)
    volumes:
      - ./apps/backend/src:/app/backend/src
      - ./apps/frontend/src:/app/frontend/src
      - /app/node_modules
      - /app/backend/node_modules
      - /app/frontend/node_modules
    profiles:
      - dev
